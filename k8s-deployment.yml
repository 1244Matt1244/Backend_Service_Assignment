apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: postgis
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgis
spec:
  serviceName: "postgis"
  replicas: 1
  selector:
    matchLabels:
      app: postgis
  template:
    metadata:
      labels:
        app: postgis
    spec:
      containers:
      - name: postgis
        image: postgis/postgis:14-3.3
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: dbname
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgis-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: app
        image: your-registry/app-image:latest
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@db-service:5432/$(POSTGRES_DB)
        - name: REDIS_URL
          value: redis://redis-service:6379
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        resources:
          limits:
            memory: 1Gi
            cpu: "2"
          requests:
            memory: 512Mi
            cpu: "0.5"
        volumeMounts:
        - name: camera-volume
          mountPath: /app/camera
      volumes:
      - name: camera-volume
        hostPath:
          path: /path/to/host/camera
          type: Directory
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  username: <base64-encoded>
  password: <base64-encoded>
  dbname: <base64-encoded>
